plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
}

group = 'com.hyperliquid'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // Core dependencies
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    
    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Reactive programming
    implementation 'io.projectreactor:reactor-core'
    implementation 'io.projectreactor.netty:reactor-netty'
    
    // HTTP client
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    
    // Cryptography
    implementation 'org.web3j:core:5.0.0'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    
    // Utilities
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'com.google.guava:guava:32.1.3-jre'
    
    // Logging
    implementation 'ch.qos.logback:logback-classic'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            pom {
                name = 'Hyperliquid Java SDK'
                description = 'Official Java SDK for Hyperliquid DEX'
                url = 'https://github.com/hyperliquid-labs/hyperliquid-java-sdk'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
            }
        }
    }
}