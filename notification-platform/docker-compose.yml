version: '3.8'

services:
  notification-platform:
    build: .
    container_name: hyperliquid-notifications
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:password@postgres:5432/notifications
      - API_PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - notification-network

  redis:
    image: redis:7-alpine
    container_name: notification-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - notification-network

  postgres:
    image: postgres:15-alpine
    container_name: notification-postgres
    environment:
      - POSTGRES_DB=notifications
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - notification-network

  grafana:
    image: grafana/grafana:latest
    container_name: notification-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    networks:
      - notification-network

  prometheus:
    image: prom/prometheus:latest
    container_name: notification-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - notification-network

networks:
  notification-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  grafana-data:
  prometheus-data: